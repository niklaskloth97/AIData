import { useQuery } from "@tanstack/react-query";

export type ColumnData = {
    id: number;
    nativeColumnName: string;
    // name: string;
    isPrimaryKey: boolean;
    foreignKeyFor?: string;
    dataType: string;
    description: string;
    descriptionsAutoGenerated: boolean;
    column_name: string;
    column_nameAutoGenerated: boolean;
    projectTables_id: number;
    projects_id: number;
    table: string;
}

const mockdata: ColumnData[] = [{
    id: 1,
    nativeColumnName: "column_name",
    // name: "column_name",
    isPrimaryKey: true,
    foreignKeyFor: "foreign",
    dataType: "string",
    description: "This is a column description for column_name in the table table_name in the database database_name",
    descriptionsAutoGenerated: true,
    column_name: "Pretty Column Name",
    column_nameAutoGenerated: false,
    projectTables_id: 1,
    projects_id: 1,
    table: "table_name"
},
{
    id: 2,
    nativeColumnName: "column_name 2",
    // name: "column_name",
    isPrimaryKey: false,
    foreignKeyFor: "foreign",
    dataType: "string",
    description: "This is a column description for column_name in the table table_name in the database database_name",
    descriptionsAutoGenerated: false,
    column_name: "Pretty Column Name 2",
    column_nameAutoGenerated: true,
    projectTables_id: 1,
    projects_id: 1,
    table: "table_name"
},
{
    id: 3,
    nativeColumnName: "column_name 3",
    // name: "column_name",
    isPrimaryKey: true,
    foreignKeyFor: "foreign",
    dataType: "string",
    description: "This is a column description for column_name in the table table_name in the database database_name",
    descriptionsAutoGenerated: false,
    column_name: "Pretty Column Name 3",
    column_nameAutoGenerated: true,
    projectTables_id: 1,
    projects_id: 1,
    table: "table_name"
},
]

export default function useTableColumn(columnId: string) {
    return useQuery({
        queryKey: ["tablesColumn", columnId],
        queryFn: async () => {
                console.log("Fetching table column data"+ columnId);
                const response: ColumnData[] = await (await fetch(`http://localhost:8000/api/project-table-columns/${columnId}`)).json();
                // const response: ColumnData[] = mockdata
                return response;
        },
    });
}
