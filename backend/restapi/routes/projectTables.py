from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from restapi.models.ProjectTable import ProjectTable, ProjectTableSchema
from restapi.models.ProjectTableColumn import ProjectTableColumn, ProjectTableColumnSchema
from typing import List
from restapi.lib.db import get_db

# Router for ProjectTable
router = APIRouter(
    prefix="/project-tables",
)

@router.get("/", response_model=List[ProjectTableSchema])
def get_project_tables(db: Session = Depends(get_db)):
    project_tables = db.query(ProjectTable).all()
    if not project_tables:
        raise HTTPException(status_code=404, detail="No project tables found")
    return project_tables


@router.post("/", response_model=ProjectTableSchema)
def create_project_table(project_table: ProjectTableSchema, db: Session = Depends(get_db)):
    new_project_table = ProjectTable(
        nativeTableName=project_table.nativeTableName,
        primaryKeyDetected=project_table.primaryKeyDetected,
        description=project_table.description,
        descriptionAutoGenerated=project_table.descriptionAutoGenerated,
        columnCount=project_table.columnCount,
        database_id=project_table.database_id,
        projects_id=project_table.projects_id,
        table_name=project_table.table_name,
        table_nameAutoGenerated=project_table.table_nameAutoGenerated,
    )
    db.add(new_project_table)
    db.commit()
    db.refresh(new_project_table)
    return new_project_table


@router.delete("/", response_model=dict)
def delete_all_project_tables(db: Session = Depends(get_db)):
    db.query(ProjectTable).delete()
    db.commit()
    return {"message": "All project tables deleted successfully"}


@router.delete("/{table_id}", response_model=dict)
def delete_project_table(table_id: int, db: Session = Depends(get_db)):
    project_table = db.query(ProjectTable).filter_by(id=table_id).first()
    if not project_table:
        raise HTTPException(status_code=404, detail="Project table not found")
    db.delete(project_table)
    db.commit()
    return {"message": "Project table deleted successfully"}

