from sqlalchemy import create_engine, Column, Integer, String, Boolean, ForeignKey
from sqlalchemy.dialects.postgresql import JSON
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship
from pydantic import BaseModel
from typing import List, Optional
from restapi.models.ProjectTableColumn import ProjectTableColumnSchema
from restapi.lib.db import Base

class ProjectTable(Base):
    __tablename__ = "projectTables"

    id = Column(Integer, primary_key=True)
    nativeTableName = Column(String, unique=True)
    primaryKeyDetected = Column(Boolean)
    description = Column(String)
    descriptionAutoGenerated = Column(Boolean)
    columnCount = Column(Integer)
    database_id = Column(Integer)
    projects_id = Column(Integer)

    # Define a relationship to ProjectTableColumn
    columns = relationship("ProjectTableColumn", back_populates="table")

class ProjectTableSchema(BaseModel):
    id: int
    nativeTableName: str
    primaryKeyDetected: bool
    description: str
    descriptionAutoGenerated: bool
    columnCount: int
    database_id: int
    projects_id: int
    columns: List[ProjectTableColumnSchema]

    class Config:
        from_attributes = True