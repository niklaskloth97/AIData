from sqlalchemy import create_engine, Column, Integer, String, Boolean, ForeignKey
from sqlalchemy.dialects.postgresql import JSON
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship
from pydantic import BaseModel
from typing import List, Optional
from restapi.lib.db import Base

class ProjectTableColumn(Base):
    __tablename__ = "projectTablesColumns"

    id = Column(Integer, primary_key=True)
    nativeColumnName = Column(String)
    isPrimaryKey = Column(Boolean)
    foreignKeyFor = Column(String, nullable=True)
    dataType = Column(String)
    description = Column(String)
    descriptionsAutoGenerated = Column(Boolean)
    column_name = Column(String)
    column_nameAutoGenerated = Column(Boolean)
    projectTables_id = Column(Integer, ForeignKey("projectTables.id"))
    projects_id = Column(Integer)

    # Define the back-populates relationship to ProjectTable
    table = relationship("ProjectTable", back_populates="columns")

class ProjectTableColumnSchema(BaseModel):
    id: int
    nativeColumnName: str
    isPrimaryKey: bool
    foreignKeyFor: Optional[str]
    dataType: str
    description: str
    descriptionsAutoGenerated: bool
    column_name: str
    column_nameAutoGenerated: bool
    projectTables_id: int
    projects_id: int

    class Config:
        from_attributes = True