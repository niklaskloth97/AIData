from sqlalchemy import create_engine, Column, Integer, String, Boolean, ForeignKey
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship

Base = declarative_base()

class ProjectTable(Base):
    __tablename__ = 'projectTables'

    id = Column(Integer, primary_key=True)
    nativeTableName = Column(String)
    primaryKeyDetected = Column(Boolean)
    description = Column(String)
    descriptionAutoGenerated = Column(Boolean)
    columnCount = Column(Integer)
    database_id = Column(Integer)
    projects_id = Column(Integer)

    columns = relationship("ProjectTableColumn", back_populates="table")


class ProjectTableColumn(Base):
    __tablename__ = 'projectTablesColumns'

    id = Column(Integer, primary_key=True)
    nativeColumnName = Column(String)
    isPrimaryKey = Column(Boolean)
    foreignKeyFor = Column(String, nullable=True)
    dataType = Column(String)
    description = Column(String)
    descriptionsAutoGenerated = Column(Boolean)
    projectTables_id = Column(Integer, ForeignKey('projectTables.id'))
    projects_id = Column(Integer)

    table = relationship("ProjectTable", back_populates="columns")
